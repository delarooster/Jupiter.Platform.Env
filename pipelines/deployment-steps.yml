parameters:
  - name: azureSubscriptionSvcCxn
    type: string
  - name: resourceGroupName
    type: string
  - name: runPostDeploymentScripts
    type: boolean
    default: true
  - name: subscriptionId
    type: string
  - name: env
    type: string
    default: dv

steps:
  - task: AzureCLI@2
    displayName: "Install IoT Extensions"
    inputs:
      azureSubscription: "${{parameters.azureSubscriptionSvcCxn}}"
      scriptType: "pscore"
      scriptLocation: "inlineScript"
      inlineScript: |
        echo '${{parameters.azureSubscriptionSvcCxn}}'
        az config set extension.use_dynamic_install=yes_without_prompt
        az extension add --name azure-iot
        echo "##[command]Set the scope to subscription id: ${{ parameters.subscriptionId }}"
        az account set -s '${{ parameters.subscriptionId }}'

  - task: AzureCLI@2
    displayName: "Migrate Iot Hub to DigiCert Global Root C2"
    inputs:
      azureSubscription: "${{parameters.azureSubscriptionSvcCxn}}"
      scriptType: "pscore"
      scriptLocation: "inlineScript"
      inlineScript: |
        Write-Host "Set subscription scope to: ${{ parameters.subscriptionId }}"
        az account set -s ${{ parameters.subscriptionId }}

        Write-Host "Update the root authority for IoT Hub: $(terraformOutput.iotHubName)"
        az iot hub certificate root-authority set `
          --hub-name $(terraformOutput.iotHubName) `
          --certificate-authority v2 `
          --subscription ${{ parameters.subscriptionId }} `
          --yes true

  - task: AzureCLI@2
    displayName: "Create DPS Link"
    inputs:
      azureSubscription: "${{parameters.azureSubscriptionSvcCxn}}"
      scriptType: "pscore"
      scriptLocation: "scriptPath"
      scriptPath: "./pipelines/scripts/createDpsLink.ps1"
      arguments: >
        -dps $(terraformOutput.dpsName)
        -iot_hub $(terraformOutput.iotHubName)
        -dps_resourceGroup $(terraformOutput.shared_resourceGroup)
        -iothub_resourceGroup $(terraformOutput.tier_resourceGroup)
        -subscription ${{ parameters.subscriptionId }}

  - task: AzureCLI@2
    displayName: "Upload Certificate to DPS"
    inputs:
      azureSubscription: "${{parameters.azureSubscriptionSvcCxn}}"
      scriptType: "pscore"
      scriptLocation: "scriptPath"
      scriptPath: "./pipelines/scripts/upload_certificate.ps1"
      arguments: >
        -dps $(terraformOutput.dpsName) 
        -shared_resourceGroup $(terraformOutput.shared_resourceGroup) 
        -subscription ${{ parameters.subscriptionId }}
        -env ${{ parameters.env }}

  - task: AzureCLI@2
    displayName: "Create Enrollment Group"
    inputs:
      azureSubscription: "${{parameters.azureSubscriptionSvcCxn}}"
      scriptType: "pscore"
      scriptLocation: "scriptPath"
      scriptPath: ./pipelines/scripts/createEnrollmentGroups.ps1
      arguments: >
        -dps $(terraformOutput.dpsName)
        -shared_resourceGroup $(terraformOutput.shared_resourceGroup)
        -iot_hub $(terraformOutput.iotHubName)
        -tier_resourceGroup $(terraformOutput.tier_resourceGroup)
        -subscription ${{ parameters.subscriptionId }}
        -env ${{ parameters.env }}
        -deploymentRegion $(terraformOutput.deploymentRegion)

  # Container Registries only exist in North Europe shared resource groups

  - task: AzureCLI@2
    displayName: "Create ACR Purge Task"
    inputs:
      azureSubscription: "${{parameters.azureSubscriptionSvcCxn}}"
      scriptType: "pscore"
      scriptLocation: "scriptPath"
      scriptPath: ./pipelines/scripts/purge_acr.ps1
      arguments: >
        -acr_name $(terraformOutput.acrName)
        -subscription ${{ parameters.subscriptionId }}
        -deploymentRegion $(terraformOutput.deploymentRegion)
