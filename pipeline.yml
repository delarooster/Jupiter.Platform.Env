trigger:
  branches:
    include:
    - sandbox
    - develop
    - test
    - staging
    - master
pr: none

parameters:
- name: brn_pool
  displayName: Build Pool
  default: 'windows-latest'
  values:
    - windows-latest
    - vs2017-win2016
    - ubuntu-latest
    - ubuntu-16.04
    - SelfBuild
- name: RunPostDeploymentScripts
  displayName: Run post deployment scripts
  type: boolean
  default: true
- name: InitializeIoTCentral
  displayName: Initialize IoT Central
  type: boolean
  default: false
- name: CreateAdminUser
  type: boolean
  default: false
- name: AdminUserEmail
  displayName: Admin user email
  type: string
  default: 'admin_user_email'
- name: AdminUserObjectId
  displayName: Admin user object id
  type: string
  default: 'admin_user_object_id'

variables:
- group: 'TBD4203_Variables'
- template: parameters.yml

stages:
### ! Build Terraform IaC
- template: pipelines/build.yml
  parameters:
    appId: ${{ variables.Jupiter_ID }}
    backend: ${{ variables.backend }}
    environment: ${{ variables.environment }}
    pool: ${{ parameters.brn_pool }}
    rt_id_env: ${{ variables.rt_id_env }}
    sp_cred: ${{ variables.sp_cred }}
    vnet_env: ${{ variables.vnet_env }}
    vnet_rg_env: ${{ variables.vnet_rg_env }}
    vw_domjoin_env: ${{ variables.vw_domjoin_env }}

### ! Deploy IaC
# : Sandbox environment(s)
- template: pipelines/deploy.yml
  parameters:
    appId: 5371
    appIdAppend: "USA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/sandbox'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-CUS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5371
    appIdAppend: "AUS"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/sandbox'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-AE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

# : Develop environment(s)
- template: pipelines/deploy.yml
  parameters:
    appId: 5768
    appIdAppend: "USA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-CUS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5768
    appIdAppend: "AUS"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-AE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5768
    appIdAppend: "JAP"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-JE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5768
    appIdAppend: "ASA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-SEA01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5768
    appIdAppend: "UK"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', variables.Jupiter_ID, '-N-UKS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

# : Test environment(s)
- template: pipelines/deploy.yml
  parameters:
    appId: 5767
    appIdAppend: "USA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/test'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5767', '-N-CUS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5767
    appIdAppend: "AUS"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/test'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5767', '-N-AE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

# : Staging environment(s)
- template: pipelines/deploy.yml
  parameters:
    appId: 5373
    appIdAppend: "USA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/staging'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5373', '-N-CUS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5373
    appIdAppend: "AUS"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/staging'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5373', '-N-AE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

# : Production environment(s)
- template: pipelines/deploy.yml
  parameters:
    appId: 5372
    appIdAppend: "USA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5372', '-P-CUS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5372
    appIdAppend: "AUS"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5372', '-P-AE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5372
    appIdAppend: "JAP"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5372', '-P-JE01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5372
    appIdAppend: "ASA"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5372', '-P-SEA01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}

- template: pipelines/deploy.yml
  parameters:
    appId: 5372
    appIdAppend: "UK"
    conditionForDeployment: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    filecreds: ${{ variables.filecreds }}
    pool: ${{ parameters.brn_pool }}
    release_env: ${{ variables.my_release_env }}
    deploymentSteps:
      - template: pipelines/deployment-steps.yml
        parameters:
          azureSubscriptionSvcCxn: ${{ variables.postScriptServicePrincipal }}
          initializeIoTCentral: ${{ parameters.InitializeIoTCentral }}
          createAdminUser: ${{ parameters.CreateAdminUser }}
          adminUserEmail: ${{ parameters.AdminUserEmail }}
          adminUserObjectId: ${{ parameters.AdminUserObjectId }}
          resourceGroupName: ${{ format('{0}{1}{2}', 'RG-ASG-Jupiter', '5372', '-P-UKS01') }}
          runPostDeploymentScripts: ${{ parameters.RunPostDeploymentScripts }}
          subscriptionId: ${{ variables.subscriptionId }}